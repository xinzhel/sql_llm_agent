{"name": "GenerateSQLTemplate", "description": "Given some information of a SQL database, create a syntactically correct a SQL query that includes a placeholder within the WHERE clause. \nThis placeholder should be a combination of a table name and a column name, enclosed within square brackets. \nFor example, use '[User.Name]' as the placeholder format.\n## Input\n    tables <str>: the table names\n    schema <str>: the schema of the tables\n    number_of_tables <int>: the number of tables required in the SQL query template which are connected by join operations\n    sql_template <str>: a SQL query template with a placeholder.  Below is an example for a SQL database with a table \"User\".\n        ```\n        SELECT \n            User.status\n        FROM \n            User\n        WHERE \n            User.Name = [User.Name];\n        ```\n        Please be creative to generate a SQL query template for a SQL database with multiple tables.\n    placeholder <str>: the placeholder in the sql query template, e.g., [User.Name] in the above example", "parameters": {"type": "object", "properties": {"tables": {"default": "Capability, Company, Company_Project, Employee, Project, Project_Capability, Project_Employee", "description": "The names of tables for a SQL database.", "type": "string"}, "schema": {"default": "\nCREATE TABLE `Capability` (\n\t`CapabilityID` VARCHAR(255) NOT NULL, \n\t`Name` VARCHAR(255), \n\tPRIMARY KEY (`CapabilityID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Company_Project` (\n\t`ProjectID` VARCHAR(255), \n\t`CompanyID` VARCHAR(255), \n\tCONSTRAINT company_project_ibfk_1 FOREIGN KEY(`ProjectID`) REFERENCES `Project` (`ProjectID`), \n\tCONSTRAINT company_project_ibfk_2 FOREIGN KEY(`CompanyID`) REFERENCES `Company` (`CompanyID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Company` (\n\t`CompanyID` VARCHAR(255) NOT NULL, \n\t`Name` VARCHAR(255), \n\t`Industry` VARCHAR(255), \n\tPRIMARY KEY (`CompanyID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Employee` (\n\t`EmployeeID` VARCHAR(255) NOT NULL, \n\t`Name` VARCHAR(255), \n\t`Location` VARCHAR(255), \n\t`JobTitle` VARCHAR(255), \n\t`Department` VARCHAR(255), \n\t`BusinessAddress` VARCHAR(255), \n\tPRIMARY KEY (`EmployeeID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Project_Capability` (\n\t`ProjectID` VARCHAR(255), \n\t`CapabilityID` VARCHAR(255), \n\tCONSTRAINT project_capability_ibfk_1 FOREIGN KEY(`ProjectID`) REFERENCES `Project` (`ProjectID`), \n\tCONSTRAINT project_capability_ibfk_2 FOREIGN KEY(`CapabilityID`) REFERENCES `Capability` (`CapabilityID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Project_Employee` (\n\t`ProjectID` VARCHAR(255) NOT NULL, \n\t`EmployeeID` VARCHAR(255) NOT NULL, \n\t`Role` VARCHAR(255), \n\tPRIMARY KEY (`ProjectID`, `EmployeeID`), \n\tCONSTRAINT project_employee_ibfk_1 FOREIGN KEY(`ProjectID`) REFERENCES `Project` (`ProjectID`), \n\tCONSTRAINT project_employee_ibfk_2 FOREIGN KEY(`EmployeeID`) REFERENCES `Employee` (`EmployeeID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4\n\n\nCREATE TABLE `Project` (\n\t`ProjectID` VARCHAR(255) NOT NULL, \n\t`Name` VARCHAR(255), \n\t`Location` VARCHAR(255), \n\t`Status` VARCHAR(255), \n\t`StartDate` DATE, \n\t`EndDate` DATE, \n\t`Asset` VARCHAR(255), \n\tPRIMARY KEY (`ProjectID`)\n)COLLATE utf8mb4_0900_ai_ci ENGINE=InnoDB DEFAULT CHARSET=utf8mb4", "description": "The schema of the tables.", "type": "string"}, "number_of_tables": {"description": "The number of entities (tables excluding associative tables) required in the SQL query template which are connected by join operations.", "type": "integer"}, "sql_template": {"description": "A SQL templates.", "type": "string"}, "placeholder": {"description": "A list of placeholders for the values of columns.", "items": {"type": "string"}, "type": "array"}}, "required": ["number_of_tables", "placeholder", "sql_template"]}}